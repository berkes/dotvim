################################################################################
# Ruby
################################################################################

snippet defml
  def ${1:#:method_name}
    return @$1 if @$1
    @$1 = ${0}
  end

snippet defms
  def ${1:#:method_name}
    @$1 ||= ${0}
  end

snippet frozen
	# frozen_string_literal: true

snippet box
  ################################################################################
  # ${1:Header}
  ################################################################################


################################################################################
# Active Record
################################################################################

snippet model
  ##
  # $1
  #
  class ${1:#:Name} < ActiveRecord::Base
    ${0}
  end

################################################################################
# RDOC
################################################################################

snippet nodoc
   # :nodoc:


################################################################################
# SPEC
################################################################################

snippet expresp
  expect(response).to

snippet modelspec
  require 'rails_helper'

  describe ${1:#:Name}, type: :model do
    ${0}
  end

snippet describe
  describe "${1:#:the subject}" do
    ${0}
  end

snippet context
  context '${1:#:the context}' do
    before do
      ${0}
    end
  end

snippet bef_stub
  before { allow(${1:subject}).to receive(:${2:message}).and_return ${3:return} }

################################################################################
# Minitest
################################################################################

snippet testunit
  # frozen_string_literal: true

  require 'test_helper'

  class ${1:#:Name}Test < Minitest::Spec
  end

snippet testmodel
  # frozen_string_literal: true

  require 'test_helper'

  class ${1:#:Name}Test < ActiveSupport::TestCase
    ${0}

    private

    def subject
      @subject ||= $1.new
    end
  end

snippet testintegrationapi
  # frozen_string_literal: true

  require 'test_helper'

  ##
  # As a ...
  # When I ...
  # And I ...
  # Then ....
  # So that I ...
  class Api${1:#:Name}Test < ActionDispatch::ApiIntegrationTest
    ${0}
  end

snippet testintegrationweb
  # frozen_string_literal: true

  require 'test_helper'

  ##
  # As a ...
  # When I ...
  # And I ...
  # Then ....
  # So that I ...
  class Web${1:#:Name}Test < BrowserIntegrationTest
    ${0}
  end

snippet testcontrollerapi
  # frozen_string_literal: true

  require 'test_helper'

  class Api::${1:#:Name}Test < ActionController::ApiTestCase
    ${0}
  end

snippet stub
  def ${1:#:stub_name}
    @$1 ||= stub("${0}")
  end

################################################################################
# RubyBlocks Swagger doc
################################################################################
snippet key
  key :${1:name}, "${2:value}"
